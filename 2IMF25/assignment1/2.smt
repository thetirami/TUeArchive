(declare-fun px (Int) Int)
(declare-fun py (Int) Int)
(declare-fun pw (Int) Int)
(declare-fun ph (Int) Int)
(declare-fun rx (Int) Int)
(declare-fun ry (Int) Int)
(declare-fun rw (Int) Int)
(declare-fun rh (Int) Int)
(declare-const dist Int)


(assert
    (and
        (or (and (= (pw  1)  4) (= (ph  1)  3)) (and (= (pw  1)  3) (= (ph  1)  4)))
        (or (and (= (pw  2)  4) (= (ph  2)  3)) (and (= (pw  2)  3) (= (ph  2)  4)))
        (or (and (= (rw  1)  4) (= (rh  1)  5)) (and (= (rw  1)  5) (= (rh  1)  4)))
        (or (and (= (rw  2)  4) (= (rh  2)  6)) (and (= (rw  2)  6) (= (rh  2)  4)))
        (or (and (= (rw  3)  5) (= (rh  3) 20)) (and (= (rw  3) 20) (= (rh  3)  5)))
        (or (and (= (rw  4)  6) (= (rh  4)  9)) (and (= (rw  4)  9) (= (rh  4)  6)))
        (or (and (= (rw  5)  6) (= (rh  5) 10)) (and (= (rw  5) 10) (= (rh  5)  6)))
        (or (and (= (rw  6)  6) (= (rh  6) 11)) (and (= (rw  6) 11) (= (rh  6)  6)))
        (or (and (= (rw  7)  7) (= (rh  7)  8)) (and (= (rw  7)  8) (= (rh  7)  7)))
        (or (and (= (rw  8)  7) (= (rh  8) 12)) (and (= (rw  8) 12) (= (rh  8)  7)))
        (or (and (= (rw  9) 10) (= (rh  9) 10)) (and (= (rw  9) 10) (= (rh  9) 10)))
        (or (and (= (rw 10) 10) (= (rh 10) 20)) (and (= (rw 10) 20) (= (rh 10) 10)))

        (>= (px  1) 0)
        (>= (py  1) 0)
        (>= (px  2) 0)
        (>= (py  2) 0)
        (>= (rx  1) 0)
        (>= (ry  1) 0)
        (>= (rx  2) 0)
        (>= (ry  2) 0)
        (>= (rx  3) 0)
        (>= (ry  3) 0)
        (>= (rx  4) 0)
        (>= (ry  4) 0)
        (>= (rx  5) 0)
        (>= (ry  5) 0)
        (>= (rx  6) 0)
        (>= (ry  6) 0)
        (>= (rx  7) 0)
        (>= (ry  7) 0)
        (>= (rx  8) 0)
        (>= (ry  8) 0)
        (>= (rx  9) 0)
        (>= (ry  9) 0)
        (>= (rx 10) 0)
        (>= (ry 10) 0)

        (<= (+ (px  1) (pw  1)) 30)
        (<= (+ (py  1) (ph  1)) 30)
        (<= (+ (px  2) (pw  2)) 30)
        (<= (+ (py  2) (ph  2)) 30)
        (<= (+ (rx  1) (rw  1)) 30)
        (<= (+ (ry  1) (rh  1)) 30)
        (<= (+ (rx  2) (rw  2)) 30)
        (<= (+ (ry  2) (rh  2)) 30)
        (<= (+ (rx  3) (rw  3)) 30)
        (<= (+ (ry  3) (rh  3)) 30)
        (<= (+ (rx  4) (rw  4)) 30)
        (<= (+ (ry  4) (rh  4)) 30)
        (<= (+ (rx  5) (rw  5)) 30)
        (<= (+ (ry  5) (rh  5)) 30)
        (<= (+ (rx  6) (rw  6)) 30)
        (<= (+ (ry  6) (rh  6)) 30)
        (<= (+ (rx  7) (rw  7)) 30)
        (<= (+ (ry  7) (rh  7)) 30)
        (<= (+ (rx  8) (rw  8)) 30)
        (<= (+ (ry  8) (rh  8)) 30)
        (<= (+ (rx  9) (rw  9)) 30)
        (<= (+ (ry  9) (rh  9)) 30)
        (<= (+ (rx 10) (rw 10)) 30)
        (<= (+ (ry 10) (rh 10)) 30)
    )
)

(define-fun not_overlap ((ax Int)(ay Int)(aw Int)(ah Int)(bx Int)(by Int)(bw Int)(bh Int)) Bool
    (or
        (>= bx (+ ax aw))
        (>= ax (+ bx bw))
        (>= by (+ ay ah))
        (>= ay (+ by bh))
    )
)

(assert
    (and
        (not_overlap (px  1) (py  1) (pw  1) (ph  1) (px  2) (py  2) (pw  2) (ph  2))
        (not_overlap (px  1) (py  1) (pw  1) (ph  1) (rx  1) (ry  1) (rw  1) (rh  1))
        (not_overlap (px  1) (py  1) (pw  1) (ph  1) (rx  2) (ry  2) (rw  2) (rh  2))
        (not_overlap (px  1) (py  1) (pw  1) (ph  1) (rx  3) (ry  3) (rw  3) (rh  3))
        (not_overlap (px  1) (py  1) (pw  1) (ph  1) (rx  4) (ry  4) (rw  4) (rh  4))
        (not_overlap (px  1) (py  1) (pw  1) (ph  1) (rx  5) (ry  5) (rw  5) (rh  5))
        (not_overlap (px  1) (py  1) (pw  1) (ph  1) (rx  6) (ry  6) (rw  6) (rh  6))
        (not_overlap (px  1) (py  1) (pw  1) (ph  1) (rx  7) (ry  7) (rw  7) (rh  7))
        (not_overlap (px  1) (py  1) (pw  1) (ph  1) (rx  8) (ry  8) (rw  8) (rh  8))
        (not_overlap (px  1) (py  1) (pw  1) (ph  1) (rx  9) (ry  9) (rw  9) (rh  9))
        (not_overlap (px  1) (py  1) (pw  1) (ph  1) (rx 10) (ry 10) (rw 10) (rh 10))

        (not_overlap (px  2) (py  2) (pw  2) (ph  2) (rx  1) (ry  1) (rw  1) (rh  1))
        (not_overlap (px  2) (py  2) (pw  2) (ph  2) (rx  2) (ry  2) (rw  2) (rh  2))
        (not_overlap (px  2) (py  2) (pw  2) (ph  2) (rx  3) (ry  3) (rw  3) (rh  3))
        (not_overlap (px  2) (py  2) (pw  2) (ph  2) (rx  4) (ry  4) (rw  4) (rh  4))
        (not_overlap (px  2) (py  2) (pw  2) (ph  2) (rx  5) (ry  5) (rw  5) (rh  5))
        (not_overlap (px  2) (py  2) (pw  2) (ph  2) (rx  6) (ry  6) (rw  6) (rh  6))
        (not_overlap (px  2) (py  2) (pw  2) (ph  2) (rx  7) (ry  7) (rw  7) (rh  7))
        (not_overlap (px  2) (py  2) (pw  2) (ph  2) (rx  8) (ry  8) (rw  8) (rh  8))
        (not_overlap (px  2) (py  2) (pw  2) (ph  2) (rx  9) (ry  9) (rw  9) (rh  9))
        (not_overlap (px  2) (py  2) (pw  2) (ph  2) (rx 10) (ry 10) (rw 10) (rh 10))

        (not_overlap (rx  1) (ry  1) (rw  1) (rh  1) (rx  2) (ry  2) (rw  2) (rh  2))
        (not_overlap (rx  1) (ry  1) (rw  1) (rh  1) (rx  3) (ry  3) (rw  3) (rh  3))
        (not_overlap (rx  1) (ry  1) (rw  1) (rh  1) (rx  4) (ry  4) (rw  4) (rh  4))
        (not_overlap (rx  1) (ry  1) (rw  1) (rh  1) (rx  5) (ry  5) (rw  5) (rh  5))
        (not_overlap (rx  1) (ry  1) (rw  1) (rh  1) (rx  6) (ry  6) (rw  6) (rh  6))
        (not_overlap (rx  1) (ry  1) (rw  1) (rh  1) (rx  7) (ry  7) (rw  7) (rh  7))
        (not_overlap (rx  1) (ry  1) (rw  1) (rh  1) (rx  8) (ry  8) (rw  8) (rh  8))
        (not_overlap (rx  1) (ry  1) (rw  1) (rh  1) (rx  9) (ry  9) (rw  9) (rh  9))
        (not_overlap (rx  1) (ry  1) (rw  1) (rh  1) (rx 10) (ry 10) (rw 10) (rh 10))

        (not_overlap (rx  2) (ry  2) (rw  2) (rh  2) (rx  3) (ry  3) (rw  3) (rh  3))
        (not_overlap (rx  2) (ry  2) (rw  2) (rh  2) (rx  4) (ry  4) (rw  4) (rh  4))
        (not_overlap (rx  2) (ry  2) (rw  2) (rh  2) (rx  5) (ry  5) (rw  5) (rh  5))
        (not_overlap (rx  2) (ry  2) (rw  2) (rh  2) (rx  6) (ry  6) (rw  6) (rh  6))
        (not_overlap (rx  2) (ry  2) (rw  2) (rh  2) (rx  7) (ry  7) (rw  7) (rh  7))
        (not_overlap (rx  2) (ry  2) (rw  2) (rh  2) (rx  8) (ry  8) (rw  8) (rh  8))
        (not_overlap (rx  2) (ry  2) (rw  2) (rh  2) (rx  9) (ry  9) (rw  9) (rh  9))
        (not_overlap (rx  2) (ry  2) (rw  2) (rh  2) (rx 10) (ry 10) (rw 10) (rh 10))

        (not_overlap (rx  3) (ry  3) (rw  3) (rh  3) (rx  4) (ry  4) (rw  4) (rh  4))
        (not_overlap (rx  3) (ry  3) (rw  3) (rh  3) (rx  5) (ry  5) (rw  5) (rh  5))
        (not_overlap (rx  3) (ry  3) (rw  3) (rh  3) (rx  6) (ry  6) (rw  6) (rh  6))
        (not_overlap (rx  3) (ry  3) (rw  3) (rh  3) (rx  7) (ry  7) (rw  7) (rh  7))
        (not_overlap (rx  3) (ry  3) (rw  3) (rh  3) (rx  8) (ry  8) (rw  8) (rh  8))
        (not_overlap (rx  3) (ry  3) (rw  3) (rh  3) (rx  9) (ry  9) (rw  9) (rh  9))
        (not_overlap (rx  3) (ry  3) (rw  3) (rh  3) (rx 10) (ry 10) (rw 10) (rh 10))

        (not_overlap (rx  4) (ry  4) (rw  4) (rh  4) (rx  5) (ry  5) (rw  5) (rh  5))
        (not_overlap (rx  4) (ry  4) (rw  4) (rh  4) (rx  6) (ry  6) (rw  6) (rh  6))
        (not_overlap (rx  4) (ry  4) (rw  4) (rh  4) (rx  7) (ry  7) (rw  7) (rh  7))
        (not_overlap (rx  4) (ry  4) (rw  4) (rh  4) (rx  8) (ry  8) (rw  8) (rh  8))
        (not_overlap (rx  4) (ry  4) (rw  4) (rh  4) (rx  9) (ry  9) (rw  9) (rh  9))
        (not_overlap (rx  4) (ry  4) (rw  4) (rh  4) (rx 10) (ry 10) (rw 10) (rh 10))

        (not_overlap (rx  5) (ry  5) (rw  5) (rh  5) (rx  6) (ry  6) (rw  6) (rh  6))
        (not_overlap (rx  5) (ry  5) (rw  5) (rh  5) (rx  7) (ry  7) (rw  7) (rh  7))
        (not_overlap (rx  5) (ry  5) (rw  5) (rh  5) (rx  8) (ry  8) (rw  8) (rh  8))
        (not_overlap (rx  5) (ry  5) (rw  5) (rh  5) (rx  9) (ry  9) (rw  9) (rh  9))
        (not_overlap (rx  5) (ry  5) (rw  5) (rh  5) (rx 10) (ry 10) (rw 10) (rh 10))

        (not_overlap (rx  6) (ry  6) (rw  6) (rh  6) (rx  7) (ry  7) (rw  7) (rh  7))
        (not_overlap (rx  6) (ry  6) (rw  6) (rh  6) (rx  8) (ry  8) (rw  8) (rh  8))
        (not_overlap (rx  6) (ry  6) (rw  6) (rh  6) (rx  9) (ry  9) (rw  9) (rh  9))
        (not_overlap (rx  6) (ry  6) (rw  6) (rh  6) (rx 10) (ry 10) (rw 10) (rh 10))

        (not_overlap (rx  7) (ry  7) (rw  7) (rh  7) (rx  8) (ry  8) (rw  8) (rh  8))
        (not_overlap (rx  7) (ry  7) (rw  7) (rh  7) (rx  9) (ry  9) (rw  9) (rh  9))
        (not_overlap (rx  7) (ry  7) (rw  7) (rh  7) (rx 10) (ry 10) (rw 10) (rh 10))

        (not_overlap (rx  8) (ry  8) (rw  8) (rh  8) (rx  9) (ry  9) (rw  9) (rh  9))
        (not_overlap (rx  8) (ry  8) (rw  8) (rh  8) (rx 10) (ry 10) (rw 10) (rh 10))

        (not_overlap (rx  9) (ry  9) (rw  9) (rh  9) (rx 10) (ry 10) (rw 10) (rh 10))
    )
)

(define-fun is_connect (
    (px Int)(py Int)(pw Int)(ph Int)
    (rx Int)(ry Int)(rw Int)(rh Int)) Bool
    (or
        (and (or (= rx (+ px pw)) (= px (+ rx rw))) (>= (+ ry rh) py) (>= (+ py ph) ry))
        (and (or (= ry (+ py ph)) (= py (+ ry rh))) (>= (+ rx rw) px) (>= (+ px pw) rx))
    )
)

(assert
    (and
        (or
            (is_connect (px 1) (py 1) (pw 1) (ph 1) (rx 1) (ry 1) (rw 1) (rh 1))
            (is_connect (px 2) (py 2) (pw 2) (ph 2) (rx 1) (ry 1) (rw 1) (rh 1))
        )
        (or
            (is_connect (px 1) (py 1) (pw 1) (ph 1) (rx 2) (ry 2) (rw 2) (rh 2))
            (is_connect (px 2) (py 2) (pw 2) (ph 2) (rx 2) (ry 2) (rw 2) (rh 2))
        )
        (or
            (is_connect (px 1) (py 1) (pw 1) (ph 1) (rx 3) (ry 3) (rw 3) (rh 3))
            (is_connect (px 2) (py 2) (pw 2) (ph 2) (rx 3) (ry 3) (rw 3) (rh 3))
        )
        (or
            (is_connect (px 1) (py 1) (pw 1) (ph 1) (rx 4) (ry 4) (rw 4) (rh 4))
            (is_connect (px 2) (py 2) (pw 2) (ph 2) (rx 4) (ry 4) (rw 4) (rh 4))
        )
        (or
            (is_connect (px 1) (py 1) (pw 1) (ph 1) (rx 5) (ry 5) (rw 5) (rh 5))
            (is_connect (px 2) (py 2) (pw 2) (ph 2) (rx 5) (ry 5) (rw 5) (rh 5))
        )
        (or
            (is_connect (px 1) (py 1) (pw 1) (ph 1) (rx 6) (ry 6) (rw 6) (rh 6))
            (is_connect (px 2) (py 2) (pw 2) (ph 2) (rx 6) (ry 6) (rw 6) (rh 6))
        )
        (or
            (is_connect (px 1) (py 1) (pw 1) (ph 1) (rx 7) (ry 7) (rw 7) (rh 7))
            (is_connect (px 2) (py 2) (pw 2) (ph 2) (rx 7) (ry 7) (rw 7) (rh 7))
        )
        (or
            (is_connect (px 1) (py 1) (pw 1) (ph 1) (rx 8) (ry 8) (rw 8) (rh 8))
            (is_connect (px 2) (py 2) (pw 2) (ph 2) (rx 8) (ry 8) (rw 8) (rh 8))
        )
        (or
            (is_connect (px 1) (py 1) (pw 1) (ph 1) (rx 9) (ry 9) (rw 9) (rh 9))
            (is_connect (px 2) (py 2) (pw 2) (ph 2) (rx 9) (ry 9) (rw 9) (rh 9))
        )
        (or
            (is_connect (px 1) (py 1) (pw 1) (ph 1) (rx 10) (ry 10) (rw 10) (rh 10))
            (is_connect (px 2) (py 2) (pw 2) (ph 2) (rx 10) (ry 10) (rw 10) (rh 10))
        )
    )
)

(assert
    (and
        (= dist 18)
        (or
            (>= (- (+ (px 1) (* 0.5 (pw 1))) (+ (px 2) (* 0.5 (pw 2)))) dist)
            (>= (- (+ (px 2) (* 0.5 (pw 2))) (+ (px 1) (* 0.5 (pw 1)))) dist)
            (>= (- (+ (py 1) (* 0.5 (ph 1))) (+ (py 2) (* 0.5 (ph 2)))) dist)
            (>= (- (+ (py 2) (* 0.5 (ph 2))) (+ (py 1) (* 0.5 (ph 1)))) dist)
        )
    )
)

(check-sat)
(get-model)
